# test_medi_workflow.chor
# A test suite for our 'medi' CLI tool.

feature "Note and Task Management"
actors: Terminal
scenario "User can create a note, add a task, verify it, and clean up" {
    # This scenario tests the full workflow of creating a note, adding a task,
    # verifying the task appears in the list, and cleaning up by deleting the note.

    # Test 1: Verify that a note can be created and capture its name.
    test NoteCreationSuccess "Create a new note" {
        given:
            wait >= 1s
        when:
            Terminal run "medi new blog-idea-for-dsl-test -m '# My medi note'"
        then:
            Terminal output_contains "Successfully created note: 'blog-idea-for-dsl-test'"
    }

    # Test 2: Verify that a task can be added to the created note.
    test TaskCanBeAdded "Add a task to the new note" {
        given:
            Test has_succeeded NoteCreationSuccess
        when:
            Terminal run "medi task add blog-idea-for-dsl-test 'Write the first draft'"
        then:
            Terminal output_contains "Added new task with ID:"
    }

    # Test 3: Verify that the added task appears in the task list.
    test TaskAppearsInList "Confirm task appears in list" {
        given:
            Test has_succeeded TaskCanBeAdded
        when:
            Terminal run "medi task list"
        then:
            Terminal output_contains "Write the first draft (for note blog-idea-for-dsl-test)"
    }

    # Test 4: Verify that the note and its tasks can be deleted.
    test CleanupSuccess "Cleanup the test note" {
        given:
            Test has_succeeded TaskAppearsInList
        when:
            Terminal run "medi delete blog-idea-for-dsl-test --force"
        then:
            Terminal output_contains "Successfully deleted note: 'blog-idea-for-dsl-test'"
    }
}
# test_medi_workflow.chor
# A test suite for our 'medi' CLI tool.

#env: EVAR
actors: Terminal

outcomes: NoteCreationSuccess, TasksListedForVerification, TaskAddedToList, CleanupSuccess

# Rule 1: Create a new note using a non-interactive flag.
rule "Action: Create a new note" {
  when:
    time >= 1s
  then:
    Terminal types "medi new blog-idea-for-dsl-test -m 'Write a post about my new CLI tool'"
    Terminal presses "Enter"
}

# Rule 2: Assert that the note was created successfully.
rule "Assertion: Check for note creation message" {
  when:
    Terminal output_contains "Successfully created note: 'blog-idea-for-dsl-test'"
  then:
    Test succeeds NoteCreationSuccess
}

# Rule 3: Add a task to the note we just created.
rule "Action: Add a task to the new note" {
  when:
    Test has_succeeded NoteCreationSuccess
  then:
    Terminal types "medi task add blog-idea-for-dsl-test 'Write the first draft'"
    Terminal presses "Enter"
}

# Rule 4: Add an outcome to the verify step
rule "Verify: List tasks to confirm creation" {
  when:
    Terminal output_contains "Added new task with ID:"
  then:
    Terminal types "medi task list"
    Terminal presses "Enter"
    # Add this action to signal that the list command has been sent.
    Test succeeds TasksListedForVerification
}

# Rule 5: Make the assertion dependent on the previous step
rule "Assertion: Confirm task appears in list" {
  when:
    # This condition ensures we only start checking AFTER the list command has run.
    Test has_succeeded TasksListedForVerification
    Terminal output_contains "Write the first draft (for note blog-idea-for-dsl-test)"
  then:
    Test succeeds TaskAddedToList
}

# Rule 6: Cleanup the test data.
rule "Cleanup: Delete the test note" {
  when:
    # This should wait for the final assertion to pass
    Test has_succeeded TaskAddedToList # Assuming you used this from the last step
  then:
    # Use --force to avoid the interactive confirmation prompt.
    Terminal types "medi delete blog-idea-for-dsl-test --force"
    Terminal presses "Enter"
}

# Rule 7: Assert that the cleanup was successful.
rule "Assertion: Confirm deletion message" {
  when:
    Terminal output_contains "Successfully deleted note: 'blog-idea-for-dsl-test'"
  then:
    Test succeeds CleanupSuccess
}